version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: lessionprm-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=LessionPRM@123
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./sql/init:/docker-entrypoint-initdb.d
    networks:
      - lessionprm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P LessionPRM@123 -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Spring Boot Application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: lessionprm-backend
    depends_on:
      sqlserver:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_USERNAME=sa
      - DB_PASSWORD=LessionPRM@123
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sqlserver:1433;databaseName=LessionPRM;encrypt=false;trustServerCertificate=true
      - JWT_SECRET=${JWT_SECRET:-mySecretKey12345678901234567890123456789012345678901234567890}
      - MOMO_PARTNER_CODE=${MOMO_PARTNER_CODE:-MOMOBKUN20180529}
      - MOMO_ACCESS_KEY=${MOMO_ACCESS_KEY:-klm05TvNBzhg7h7j}
      - MOMO_SECRET_KEY=${MOMO_SECRET_KEY:-at67qH6mk8w5Y1nAyMoYKMWACiEi2bsa}
      - MOMO_ENDPOINT=${MOMO_ENDPOINT:-https://test-payment.momo.vn/v2/gateway/api/create}
      - MOMO_REDIRECT_URL=${MOMO_REDIRECT_URL:-http://localhost:3000/payment/success}
      - MOMO_NOTIFY_URL=${MOMO_NOTIFY_URL:-http://localhost:8080/api/payments/callback}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:3001}
    networks:
      - lessionprm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    volumes:
      - app_logs:/app/logs

  # Redis for caching (optional but recommended for production)
  redis:
    image: redis:7-alpine
    container_name: lessionprm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lessionprm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: lessionprm-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - lessionprm-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  sqlserver_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  lessionprm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16